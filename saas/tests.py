from django.test import TestCase

from .metrics.base import month_periods


class SaasTests(TestCase):
    """
    Tests saas innner functions
    """

    def test_month_periods_utc(self):
        """
        Test UTC datetime with no timezone
        """
        results = month_periods(from_date="2018-04-18T00:00:00+00:00")
        results = [str(res) for res in results]
        self.assertEqual(results, [
            '2017-05-01 00:00:00+00:00',
            '2017-06-01 00:00:00+00:00',
            '2017-07-01 00:00:00+00:00',
            '2017-08-01 00:00:00+00:00',
            '2017-09-01 00:00:00+00:00',
            '2017-10-01 00:00:00+00:00',
            '2017-11-01 00:00:00+00:00',
            '2017-12-01 00:00:00+00:00',
            '2018-01-01 00:00:00+00:00',
            '2018-02-01 00:00:00+00:00',
            '2018-03-01 00:00:00+00:00',
            '2018-04-01 00:00:00+00:00',
            '2018-04-18 00:00:00+00:00'])


    def test_month_periods_neg_offset(self):
        """
        Test datetime with negative timeoffset and no timezone
        """
        results = month_periods(from_date="2018-04-18T00:00:00-07:00")
        results = [str(res) for res in results]
        self.assertEqual(results, [
            '2017-05-01 00:00:00-07:00',
            '2017-06-01 00:00:00-07:00',
            '2017-07-01 00:00:00-07:00',
            '2017-08-01 00:00:00-07:00',
            '2017-09-01 00:00:00-07:00',
            '2017-10-01 00:00:00-07:00',
            '2017-11-01 00:00:00-07:00',
            '2017-12-01 00:00:00-07:00',
            '2018-01-01 00:00:00-07:00',
            '2018-02-01 00:00:00-07:00',
            '2018-03-01 00:00:00-07:00',
            '2018-04-01 00:00:00-07:00',
            '2018-04-18 00:00:00-07:00'])


    def test_month_periods_pos_offset(self):
        """
        Test datetime with positive timeoffset and no timezone
        """
        results = month_periods(from_date="2018-04-18T00:00:00+03:00")
        results = [str(res) for res in results]
        self.assertEqual(results, [
            '2017-05-01 00:00:00+03:00',
            '2017-06-01 00:00:00+03:00',
            '2017-07-01 00:00:00+03:00',
            '2017-08-01 00:00:00+03:00',
            '2017-09-01 00:00:00+03:00',
            '2017-10-01 00:00:00+03:00',
            '2017-11-01 00:00:00+03:00',
            '2017-12-01 00:00:00+03:00',
            '2018-01-01 00:00:00+03:00',
            '2018-02-01 00:00:00+03:00',
            '2018-03-01 00:00:00+03:00',
            '2018-04-01 00:00:00+03:00',
            '2018-04-18 00:00:00+03:00'])


    def test_month_periods_timezone(self):
        """
        Test datetime with a timezone
        """
        results = month_periods(from_date="2018-04-18T00:00:00-04:00",
            tzinfo="US/Eastern")
        results = [str(res) for res in results]
        self.assertEqual(results, [
            '2017-05-01 00:00:00-04:00',
            '2017-06-01 00:00:00-04:00',
            '2017-07-01 00:00:00-04:00',
            '2017-08-01 00:00:00-04:00',
            '2017-09-01 00:00:00-04:00',
            '2017-10-01 00:00:00-04:00',
            '2017-11-01 00:00:00-04:00',
            '2017-12-01 00:00:00-05:00',
            '2018-01-01 00:00:00-05:00',
            '2018-02-01 00:00:00-05:00',
            '2018-03-01 00:00:00-05:00',
            '2018-04-01 00:00:00-04:00',
            '2018-04-18 00:00:00-04:00'])
